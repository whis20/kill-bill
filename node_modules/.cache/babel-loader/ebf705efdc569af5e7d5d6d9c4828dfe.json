{"ast":null,"code":"import _slicedToArray from\"D:/project/react/kill-bill/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{BillContext}from'../../Context/BillContext';import'./style.css';import{useToasts}from'react-toast-notifications';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddBill=function AddBill(){var _useToasts=useToasts(),addToast=_useToasts.addToast;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),newBillTitle=_useState2[0],setNewBillTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newBillCost=_useState4[0],setNewBillCost=_useState4[1];/* const updateBills = () =>{\r\n        console.log(bill);\r\n    }; */var _useContext=useContext(BillContext),updateBills=_useContext.updateBills;var billObjectValid=function billObjectValid(){if(!newBillTitle.split('').find(function(char){return char!==' ';})){addToast('Please enter a bill title',{appearance:'warning',autoDismiss:true,autoDismissTimeout:4000});}if(!newBillCost){addToast('Please enter a bill cost',{appearance:'warning',autoDismiss:true,autoDismissTimeout:4000});}if(Number.parseFloat(newBillCost)<0){addToast('Please enter a non-negative bill cost',{appearance:'warning',autoDismiss:true,autoDismissTimeout:4000});}var costValid=newBillCost&&Number.parseFloat(newBillCost)>0;var titleValid=newBillTitle&&newBillTitle.split('').find(function(char){return char!==' ';});if(titleValid&&costValid){addToast('Bill added successfuly',{appearance:'success',autoDismiss:true,autoDismissTimeout:4000});}return titleValid&&costValid;};var clearForm=function clearForm(){setNewBillTitle('');setNewBillCost('');};/* useEffect(() => {\r\n        console.log(newBillTitle);\r\n    },[newBillTitle]); */return/*#__PURE__*/_jsxs(\"div\",{className:\"add-bill-container\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"add-bill-form-control form-control\",placeholder:\"Enter Bill title\",type:\"text\",value:newBillTitle,autofocus:true,onChange:function onChange(e){return setNewBillTitle(e.target.value);}}),/*#__PURE__*/_jsx(\"input\",{className:\"add-bill-form-control form-control\",placeholder:\"Enter Bill Monthly Cost\",type:\"number\",min:\"0\",step:\"1\",oninput:\"validity.valid||(value='');\",value:newBillCost,onChange:function onChange(e){return setNewBillCost(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"add-bill-form-control btn btn-dark\",type:\"submit\",onClick:function onClick(){if(billObjectValid()){updateBills({title:newBillTitle.toLowerCase().split(' ').map(function(word){return word.charAt(0).toUpperCase()+word.slice(1);}).join(' '),monthlyCost:newBillCost,enabled:true});clearForm();}},children:\"Add Bill\"}),\"\\xA0\",/*#__PURE__*/_jsx(\"hr\",{})]});};export default AddBill;","map":{"version":3,"sources":["D:/project/react/kill-bill/src/Components/AddBill/AddBill.js"],"names":["React","useContext","useState","BillContext","useToasts","AddBill","addToast","newBillTitle","setNewBillTitle","newBillCost","setNewBillCost","updateBills","billObjectValid","split","find","char","appearance","autoDismiss","autoDismissTimeout","Number","parseFloat","costValid","titleValid","clearForm","e","target","value","title","toLowerCase","map","word","charAt","toUpperCase","slice","join","monthlyCost","enabled"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport { BillContext } from '../../Context/BillContext';\r\nimport './style.css'\r\n\r\nimport { useToasts } from 'react-toast-notifications';\r\n\r\n\r\nconst AddBill = () =>{\r\n    const { addToast } = useToasts();\r\n\r\n    const [newBillTitle,setNewBillTitle] = useState('');\r\n    const [newBillCost,setNewBillCost] = useState('');\r\n\r\n    /* const updateBills = () =>{\r\n        console.log(bill);\r\n    }; */\r\n\r\n\r\n    const {updateBills} = useContext(BillContext)\r\n\r\n    const billObjectValid = () =>{\r\n        if(!(newBillTitle.split('').find(char => char !== ' ')))\r\n        {\r\n            addToast('Please enter a bill title', { appearance: 'warning', autoDismiss:true,autoDismissTimeout:4000 });\r\n        }\r\n        if(!newBillCost){\r\n            addToast('Please enter a bill cost', { appearance: 'warning', autoDismiss:true,autoDismissTimeout:4000 });      \r\n        }\r\n        if(Number.parseFloat(newBillCost)<0)\r\n        {\r\n            addToast('Please enter a non-negative bill cost', { appearance: 'warning', autoDismiss:true,autoDismissTimeout:4000 });\r\n        }\r\n        const costValid = newBillCost && (Number.parseFloat(newBillCost)>0);\r\n        \r\n        const titleValid = newBillTitle && newBillTitle.split('').find(char => char !== ' ');\r\n        if(titleValid && costValid)\r\n        {\r\n            addToast('Bill added successfuly', { appearance: 'success', autoDismiss:true,autoDismissTimeout:4000 });\r\n        }\r\n        return titleValid && costValid;\r\n    };\r\n\r\n    const clearForm = () =>{\r\n        setNewBillTitle('');\r\n        setNewBillCost('');\r\n    }\r\n    /* useEffect(() => {\r\n        console.log(newBillTitle);\r\n    },[newBillTitle]); */\r\n\r\n\r\n    return(\r\n        <div className='add-bill-container'>\r\n        \r\n            <input className='add-bill-form-control form-control'\r\n            placeholder='Enter Bill title'\r\n            type='text'\r\n            value={newBillTitle}\r\n            autofocus\r\n            onChange={(e)=>setNewBillTitle(e.target.value)}></input>\r\n            <input className='add-bill-form-control form-control'\r\n            placeholder='Enter Bill Monthly Cost'\r\n            type='number'\r\n            min=\"0\" step=\"1\" oninput=\"validity.valid||(value='');\"\r\n            value={newBillCost}\r\n            onChange={(e)=>setNewBillCost(e.target.value)}></input>\r\n            <button className='add-bill-form-control btn btn-dark'\r\n            type=\"submit\"\r\n            onClick={() => {\r\n                if(billObjectValid()){\r\n                    updateBills({\r\n                        title:newBillTitle.toLowerCase()\r\n                        .split(' ')\r\n                        .map(word=>word.charAt(0).toUpperCase() + word.slice(1))\r\n                        .join(' '),\r\n                        monthlyCost:newBillCost,\r\n                        enabled:true\r\n                });\r\n                    clearForm();\r\n                }      \r\n            }}>Add Bill</button>\r\n            &nbsp;<hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBill;"]},"metadata":{},"sourceType":"module"}