{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\react\\\\kill-bill\\\\src\\\\Components\\\\BillTotal\\\\BillTotal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { BillContext } from '../../Context/BillContext';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BillTotal = () => {\n  _s();\n\n  const {\n    bills,\n    selectedCostInterval\n  } = useContext(BillContext);\n\n  const moneyIntervalTransform = cost => {\n    const monthlyCost = Number.parseFloat(cost);\n\n    switch (selectedCostInterval) {\n      case 'Monthly':\n        return monthlyCost;\n\n      case 'Yearly':\n        return monthlyCost * 12;\n\n      case 'Weekly':\n        return monthlyCost * 12 / 52;\n\n      case 'Daily':\n        return monthlyCost * 12 / 365;\n\n      default:\n        return 0;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bill-total-container\",\n      children: [selectedCostInterval, \" bill cost :\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-cost\",\n        children: '₹ ' + bills.reduce((acc, val) => {\n          return !val.enabled ? moneyIntervalTransform(val.monthlyCost) + acc : acc;\n        }, 0).toFixed(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(BillTotal, \"ToRJmf38rNFztuZflwrg+N4n2Q4=\");\n\n_c = BillTotal;\nexport default BillTotal;\n\nvar _c;\n\n$RefreshReg$(_c, \"BillTotal\");","map":{"version":3,"sources":["D:/project/react/kill-bill/src/Components/BillTotal/BillTotal.js"],"names":["React","useContext","useState","BillContext","BillTotal","bills","selectedCostInterval","moneyIntervalTransform","cost","monthlyCost","Number","parseFloat","reduce","acc","val","enabled","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAO,aAAP;;;;AAGA,MAAMC,SAAS,GAAG,MAAK;AAAA;;AAEnB,QAAM;AAACC,IAAAA,KAAD;AAASC,IAAAA;AAAT,MAAgCL,UAAU,CAACE,WAAD,CAAhD;;AAEA,QAAMI,sBAAsB,GAAIC,IAAD,IAAU;AACrC,UAAMC,WAAW,GAAGC,MAAM,CAACC,UAAP,CAAkBH,IAAlB,CAApB;;AACA,YAAOF,oBAAP;AACI,WAAK,SAAL;AACI,eAAOG,WAAP;;AAEJ,WAAK,QAAL;AACI,eAAOA,WAAW,GAAG,EAArB;;AAEJ,WAAK,QAAL;AACI,eAAOA,WAAW,GAAG,EAAd,GAAmB,EAA1B;;AAEJ,WAAK,OAAL;AACI,eAAOA,WAAW,GAAG,EAAd,GAAmB,GAA1B;;AAEJ;AACI,eAAO,CAAP;AAdR;AAgBH,GAlBD;;AAoBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,iBACKH,oBADL,+BAEI;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,kBAEQ,OAAOD,KAAK,CAACO,MAAN,CAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC9B,iBAAO,CAACA,GAAG,CAACC,OAAL,GACPR,sBAAsB,CAACO,GAAG,CAACL,WAAL,CAAtB,GAAwCI,GADjC,GACuCA,GAD9C;AAEH,SAHM,EAGL,CAHK,EAGFG,OAHE,CAGM,CAHN;AAFf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CAvCD;;GAAMZ,S;;KAAAA,S;AAyCN,eAAeA,SAAf","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport { BillContext } from '../../Context/BillContext';\r\nimport './style.css'\r\n\r\n\r\nconst BillTotal = () =>{\r\n\r\n    const {bills , selectedCostInterval}= useContext(BillContext);\r\n\r\n    const moneyIntervalTransform = (cost) => {\r\n        const monthlyCost = Number.parseFloat(cost);\r\n        switch(selectedCostInterval) {\r\n            case 'Monthly':\r\n                return monthlyCost;\r\n\r\n            case 'Yearly':\r\n                return monthlyCost * 12;\r\n\r\n            case 'Weekly':\r\n                return monthlyCost * 12 / 52;\r\n\r\n            case 'Daily':\r\n                return monthlyCost * 12 / 365;\r\n\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className='bill-total-container'>\r\n                {selectedCostInterval} bill cost : \r\n                <span className='total-cost'>\r\n                    {\r\n                        '₹ ' + bills.reduce((acc, val) => {\r\n                            return !val.enabled ? \r\n                            moneyIntervalTransform(val.monthlyCost)+acc : acc;\r\n                        },0).toFixed(2)\r\n                    }\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BillTotal;"]},"metadata":{},"sourceType":"module"}